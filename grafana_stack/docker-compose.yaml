services:
  ###### Grafana ######
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ${CONFIG_PATH}/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ${CONFIG_PATH}/grafana/config.monitoring
    networks:
      - homelab
    environment:
      - "TZ=${TZ}"
    user: "472" # this means, that the username is admin
    labels:
      traefik.enable: "true"
      traefik.docker.network: "homelab"
      traefik.http.routers.grafana.entrypoints: "websecure"
      traefik.http.routers.grafana.rule: "Host(`${TRAEFIK_GRAFANA_HOST}`)"
      traefik.http.routers.grafana.tls.certresolver: "myresolver"
      traefik.http.routers.grafana.service: "grafana"
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
      traefik.http.routers.grafana.middlewares: authelia@docker
    restart: unless-stopped

  ###### Loki ######
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ${CONFIG_PATH}/loki:/etc/loki
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - homelab
    restart: unless-stopped

  ###### Prometheus ######
  prometheus:
    container_name: "prometheus"
    image: prom/prometheus
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    ports:
      - "9090:9090"
    volumes:
      - ${CONFIG_PATH}/prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - "--storage.tsdb.retention.time=${PROMETHEUS_RETENTION_TIME}"
      - "--storage.tsdb.retention.size=${PROMETHEUS_RETENTION_SIZE}"
    networks:
      - homelab
    labels:
      traefik.enable: "true"
      traefik.docker.network: "homelab"
      traefik.http.routers.prometheus.entrypoints: "websecure"
      traefik.http.routers.prometheus.rule: "Host(`${TRAEFIK_PROMETHEUS_HOST}`)"
      traefik.http.routers.prometheus.tls.certresolver: "myresolver"
      traefik.http.routers.prometheus.service: "prometheus"
      traefik.http.services.prometheus.loadbalancer.server.port: "9090"
      traefik.http.routers.prometheus.middlewares: authelia@docker
    restart: "unless-stopped"

  ###### Prometheus node-exporter ######
  prometheus-node-exporter:
    image: prom/node-exporter:latest
    container_name: prometheus-node-exporter
    restart: unless-stopped
    environment:
      - "TZ=${TZ}"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - homelab

  ###### Promtail ######
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    # ports:
    #   - "1514:1514" # this is only needed if you are going to send syslogs
    volumes:
      - /var/log:/var/log
      - ${CONFIG_PATH}/promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - homelab
    restart: unless-stopped

networks:
  homelab:
    name: homelab
    driver: bridge
    external: false

volumes:
  prometheus_data: {}
  grafana_data: {}
