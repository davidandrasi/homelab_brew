services:
  ###### Authelia ######
  authelia:
    image: authelia/authelia
    container_name: authelia
    volumes:
      - "${CONFIG_PATH}/authelia/:/config"
    networks:
      - homelab
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`${TRAEFIK_AUTHELIA_HOST}`)'
      - 'traefik.http.routers.authelia.entrypoints=websecure'
      - 'traefik.http.routers.authelia.tls.certresolver=myresolver'
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.middlewares.authelia.forwardauth.address=https://${TRAEFIK_AUTHELIA_HOST}/api/verify?rd=https://${TRAEFIK_AUTHELIA_HOST}'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
      # Authelia is also capable of http basicauth, so it can be used for that also instead of the built-in one from traefik middlewares
      #- 'traefik.http.middlewares.authelia-basic.forwardAuth.address=https://${TRAEFIK_AUTHELIA_HOST}/api/verify?auth=basic' # Middleware name will be authelia-basic@docker
      #- 'traefik.http.middlewares.authelia-basic.forwardAuth.trustForwardHeader=true'
      #- 'traefik.http.middlewares.authelia-basic.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
    ports:
      - "9091:9091"
    restart: unless-stopped
    environment:
      - "TZ=${TZ}"
    healthcheck:
      disable: true # when false, the container takes 10-20s to come up

  ###### Dynu Updater ######
  dynu-updater:
    container_name: "dynu-updater"
    environment:
      - "TZ=${TZ}"
      - "USERNAME=${USERNAME}"
      - "PASSWORD=${PASSWORD}"
      - "HOSTNAMES=${HOSTNAMES}"
      - "REFRESH_TIME=${REFRESH_TIME}"
    image: "dokeraj/dynu-updater:latest"
    networks:
      - homelab
    restart: "unless-stopped"
    ports:
      - "1050:1050"

  ###### Homepage ######
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - 3002:3000
    environment:
      - "TZ=${TZ}"
      - "HOMEPAGE_ALLOWED_HOSTS=${HOMEPAGE_ALLOWED_HOSTS}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.homepage.entrypoints: "websecure"
      traefik.http.routers.homepage.rule: "Host(`${TRAEFIK_DEFAULT_HOST}`, `${TRAEFIK_HOMEPAGE_HOST}`)"
      traefik.http.routers.homepage.tls.certresolver: "myresolver"
      traefik.http.routers.homepage.middlewares: authelia@docker
    volumes:
      - ${CONFIG_PATH}/homepage/:/app/config
      - ${HDD_PATH}/:/mnt/hdd:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - homelab

  ###### Portainer ######
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    networks:
      - homelab
    ports:
      - 9000:9000/tcp
    restart: unless-stopped
    environment:
      - "TZ=${TZ}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.portainer.entrypoints: "websecure"
      traefik.http.routers.portainer.rule: "Host(`${TRAEFIK_PORTAINER_HOST}`)"
      traefik.http.routers.portainer.tls: "true"
      traefik.http.routers.portainer.tls.certresolver: "myresolver"
      traefik.http.routers.portainer.middlewares: authelia@docker
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      traefik.http.routers.portainer.service: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  ###### Traefik ######
  traefik:
    command:
      ### Basic ###
      - "traefik"
      - "--providers.file=true"
      - "--providers.file.filename=/etc/traefik/rules.toml"
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      ### Letsencrypt ###
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.email=${CERT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      ### Web entrypoint ###
      - '--entryPoints.web=true'
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      #- '--entryPoints.web.forwardedHeaders.insecure=false'
      #- '--entryPoints.web.proxyProtocol.insecure=false'
      - "--entrypoints.web.forwardedHeaders.trustedIPs=${AUTHELIA_TRUSTED_IPS}"
      - "--entryPoints.web.proxyProtocol.trustedIPs=${AUTHELIA_TRUSTED_IPS}"
      ### Websecure entrypoint ###
      - '--entryPoints.websecure=true'
      - "--entrypoints.websecure.address=:443"
      #- '--entryPoints.websecure.forwardedHeaders.insecure=false'
      #- '--entryPoints.websecure.proxyProtocol.insecure=false'
      - "--entrypoints.websecure.forwardedHeaders.trustedIPs=${AUTHELIA_TRUSTED_IPS}"
      - "--entryPoints.websecure.proxyProtocol.trustedIPs=${AUTHELIA_TRUSTED_IPS}"
      ### Metrics ###
      - "--metrics"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=traefik"
      - "--metrics.prometheus.buckets=${PROMETHEUS_BUCKETS}"
    container_name: "traefik"
    image: "traefik:latest"
    depends_on:
      - authelia
    labels:
      traefik.enable: "true"
      traefik.http.routers.api.entrypoints: "websecure"
      traefik.http.routers.api.rule: "Host(`${TRAEFIK_TRAEFIK_HOST}`)"
      traefik.http.routers.api.service: "api@internal"
      traefik.http.routers.api.tls.certresolver: "myresolver"
      traefik.http.routers.api.middlewares: "basic-auth@docker"
      traefik.http.middlewares.basic-auth.basicauth.users: ${ADMIN_USER}:${ADMIN_PASSWORD},${USER1}:${USER1_PASSWORD}
    networks:
      - homelab
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    restart: "unless-stopped"
    environment:
      - "TZ=${TZ}"
    volumes:
      - "${CONFIG_PATH}/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${CONFIG_PATH}/traefik/rules.toml:/etc/traefik/rules.toml"


  ###### Whoami ######
  whoami:
    container_name: "whoami"
    image: "traefik/whoami:latest"
    labels:
      traefik.enable: "true"
      traefik.http.routers.whoami.entrypoints: "websecure"
      traefik.http.routers.whoami.rule: "Host(`${TRAEFIK_WHOAMI_HOST}`)"
      traefik.http.routers.whoami.tls: "true"
      traefik.http.routers.whoami.tls.certresolver: "myresolver"
      traefik.http.routers.whoami.middlewares: authelia@docker
    networks:
      - homelab
    restart: "unless-stopped"
    environment:
      - "TZ=${TZ}"

networks:
  homelab:
    name: homelab
    driver: bridge
    external: false

volumes:
  portainer_data: {}
